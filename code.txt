<!DOCTYPE html>
<html>

<head>
    <title>Deals</title>
    <style>
        th,
        td,
        p,
        input {
            font: 14px Verdana;
        }

        table,
        th,
        td {
            border: solid 1px #DDD;
            border-collapse: collapse;
            padding: 2px 3px;
            text-align: center;
        }

        th {
            font-weight: bold;
        }

        label {
            display: inline-block;
            width: 140px;
            text-align: right;
        }â€‹
    </style>
    <script src="create_table.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

</head>

<body onload="CreateTableFromJSON()">
    <table border="1">
        <thead>
            <tr>
                <th>Deal Id</th>
                <th>client_name</th>
                <th>project_name</th>
                <th>project_manager</th>
                <th>project_cost</th>
                <th>DELETE</th>
            </tr>
        </thead>
        <tbody id="body">

        </tbody>
    </table>
    <div align="center"></div>
    <H3>Add New Deal</H3>

    <li><label>Client Name</label>
        <input type="text" id="clientNameInput" />
    </li>
    <li> <label>Project Name</label>
        <input type="text" id="projectNameInput" />
    </li>
    <li> <label>Project Manager</label>
        <input type="text" id="projectManagerInput" />
    </li>
    <li><label>Project Cost</label>git 
        <input type="number" id="projectCostInput" />
    </li>

    </div>

    <input type="button" onclick="AddNewDeal()" value="Save" />

    <a href="finance.html" target="_blank"><button>finance department</button></a>

</body>

</html>
<!DOCTYPE html>
<html>

<head>
    <title>Finance page</title>
    <style>
        th,
        td,
        p,
        input {
            font: 14px Verdana;
        }

        table,
        th,
        td {
            border: solid 1px #DDD;
            border-collapse: collapse;
            padding: 2px 3px;
            text-align: center;
        }

        th {
            font-weight: bold;
        }
    </style>
    <script src="finance.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

</head>

<body onload="CreateTableFromJSON()">

    <table border="1">
        <thead>
            <tr>
                <th>Deal Id</th>
                <th>client_name</th>
                <th>project_name</th>
                <th>project_manager</th>
                <th>project_cost</th>
            </tr>
        </thead>
        <tbody  class="update" id="body">
            <!-- <tr>
                <td class ="dealId" >${value.dealId}</td>
                <td class ="client_name">${value.client_name}</td>
                <td class ="project_name">${value.project_name}</td>
                <td class ="project_manager">${value.project_manager}</td>
                <td ><input type="text" class ="project_cost" value= "${value.project_cost}"></td>
              </tr> -->
        </tbody>
        
    </table>
    <input type="button" onclick="UpdateCost()" value="Update Cost" id ="project_cost"/>
</body>
</html>
 create_table.js ...............................................
 #########################################################
 class Deal {
    constructor(dealId, client_name, project_name, project_manager, project_cost) {
        this.dealId = dealId;
        this.client_name = client_name;
        this.project_name = project_name
        this.project_manager = project_manager
        this.project_cost = project_cost
    }

}
var currentDealId = 0;
var myData = null;
function initialize() {
    if (localStorage.getItem("myData") === null) {
        
        myData = [new Deal(0, "Microsoft", "Appolo Project", "Mary", 1000),
        new Deal(1, "Intel", "Hermes project", "bob", 10000),
        new Deal(2, "Apple", "Zeus project", "Jane", 100000)]

        currentDealId = myData.length;
        localStorage.setItem("myData", JSON.stringify(myData));
    } else {
        myData = JSON.parse(localStorage.getItem("myData"));
        currentDealId = myData.length;
    }
}



//  localStorage allows us to persist key value pairs in a way that would survive page refreshes, navigation, and user closing/reopening browser.
//  localStorage has limits to the size of each object stored.   


function CreateTableFromJSON() {
    initialize();
    $('tbody').empty()
    // localStorage.setItem("myData", JSON.stringify(myData));

    var myDataTest = JSON.parse(localStorage.getItem("myData"))

    $.each(myDataTest, function (key, value) {
        $('tbody').append(`<tr>
    <td>${value.dealId}</td>
    <td>${value.client_name}</td>
    <td>${value.project_name}</td>
    <td>${value.project_manager}</td>
    <td>${value.project_cost}</td>
    <td><button onclick="DeleteRow(${value.dealId})"> <img src="trashcan.png" width="50""> </button></td>
  </tr>`);
    })
}

function AddNewDeal() {
    var clientName = document.getElementById("clientNameInput").value;
    var projectName = document.getElementById("projectNameInput").value;
    var projectManager = document.getElementById("projectManagerInput").value;
    var projectCost = document.getElementById("projectCostInput").value;


    document.getElementById("clientNameInput").value = "";
    document.getElementById("projectNameInput").value = "";
    document.getElementById("projectManagerInput").value = "";
    document.getElementById("projectCostInput").value = "";

    InsertRow(currentDealId, clientName, projectName, projectManager, projectCost);


}

function InsertRow(dealId, clientName, projectName, projectManager, projectCost) {
    //myData.push({"dealId": dealId, "client_name" : clientName, "project_name" : projectName, "project_manager" : projectManager, "project_cost" : projectCost})
    var a = new Deal(dealId, clientName, projectName, projectManager, projectCost);
    myData.push(a);
    currentDealId++;
    localStorage.clear();
    localStorage.setItem("myData", JSON.stringify(myData))
    // $("tbody").empty()
    CreateTableFromJSON();

}

function DeleteRow(dealId) {
    
    for (var i = 0; i < myData.length; i++) {
        
        if (parseInt(myData[i].dealId) === parseInt(dealId)) {
            if (confirm("Are you sure to delete Deal " + JSON.stringify(myData[i]))) {
                myData.splice(i, 1);
                localStorage.removeItem(myData[i]);
            } else {

                break;
            }

        }

    }

    CreateTableFromJSON();
}

#####################################################################################
finance.js
#####################################################################################
class Deal {
    constructor(dealId, client_name, project_name, project_manager, project_cost) {
        this.dealId = dealId;
        this.client_name = client_name;
        this.project_name = project_name
        this.project_manager = project_manager
        this.project_cost = project_cost
    }
}
function CreateTableFromJSON() {
    $("tbody").empty()
    var Data = JSON.parse(localStorage.getItem("myData"));

    $.each(Data, function (key, value) {
        $('tbody').append(`<tr>
    <td class ="dealId" >${value.dealId}</td>
    <td class ="client_name">${value.client_name}</td>
    <td class ="project_name">${value.project_name}</td>
    <td class ="project_manager">${value.project_manager}</td>
    <td ><input type="text" class ="project_cost" value= "${value.project_cost}"></td>
  </tr>`);
    })

}
function UpdateCost(){
    var ary = [];
    $(function () {
        $('.update tr').each(function (a, b) {
            var dealId = $('.dealId',b).text();
            var clientName =$('.client_name',b).text();
            var projectName =  $('.project_name',b).text();
            var projectManager =$('.project_manager',b).text();
            var projectCost =$('.project_cost',b).val();
           
            ary.push(new Deal(dealId,clientName,projectName,projectManager,projectCost));
           
        });
       
    });
    localStorage.clear();
    localStorage.setItem("myData", JSON.stringify(ary));
    console.log(JSON.stringify(ary));
    alert("cost updated")
    CreateTableFromJSON();
}